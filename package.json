{
  "name": "finalchallenge",
  "version": "1.0.0",
  "description": "A simple CAP project.",
  "private": true,
  "scripts": {
    "start": "node ./srv/server.js",
    "dev": "npm run build:cds && nodemon",
    "dev:watch": "cds-ts watch",
    "debug": "nodemon",
    "test": "mocha -r ts-node/register tests/**/*.spec.ts",
    "test:integration": "mocha -r ts-node/register tests/integration/**/*.spec.ts",
    "test:unit": "mocha -r ts-node/register tests/unit/**/*.spec.ts",
    "coverage": "nyc npm run test",
    "db:sqlite": "cross-var cds deploy --to sqlite:$npm_package_name-db.db",
    "db:hana": "cds deploy --to hana",
    "watch:controls": "npx @ui5/ts-interface-generator --watch",
    "build": "npm run build:cds && npm run build:ts",
    "build:cds": "cross-var echo 'Compiling CDS sources...' && cds2types --cds ./srv/finalchallenge-srv.cds --output ./src/entities.ts --prefix I -f && cds build && shx cp .cdsrc.json gen/srv",
    "build:ts": "echo 'Compiling TypeScript sources...' && tsc",
    "build:mta": "mbt build"
  },
  "dependencies": {
    "@sap/cds": "^5.8.2",
    "cds-routing-handlers": "^3.0.6",
    "cf-nodejs-logging-support": "^6.13.0",
    "express": "^4.17.3",
    "passport": "^0.5.2",
    "reflect-metadata": "^0.1.13",
    "winston": "^3.6.0"
  },
  "devDependencies": {
    "@istanbuljs/nyc-config-typescript": "^1.0.2",
    "@types/chai": "^4.3.0",
    "@types/chai-http": "^4.2.0",
    "@types/express": "^4.17.13",
    "@types/mocha": "^9.1.0",
    "@ui5/ts-interface-generator": "^0.5.0",
    "cds2types": "^2.7.2",
    "chai": "^4.3.6",
    "chai-http": "^4.3.0",
    "cross-var": "^1.1.0",
    "mbt": "^1.2.7",
    "mocha": "^9.2.1",
    "nodemon": "^2.0.15",
    "nyc": "^15.1.0",
    "prettier": "^2.5.1",
    "shx": "^0.3.4",
    "sinon": "^13.0.1",
    "sqlite3": "^5.0.2",
    "ts-node": "^10.5.0",
    "typedoc": "^0.22.12",
    "typescript": "^4.5.5"
  },
  "cds": {
    "requires": {
      "db": {
        "kind": "sqlite",
        "credentials": {
          "database": "finalchallenge-db.db"
        }
      }
    }
  }
}